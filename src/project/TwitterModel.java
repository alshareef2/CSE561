package project;

import java.awt.Dimension;
import java.awt.Point;

import GenCol.entity;

import project.entities.ExtremeTopicCommand;

import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

public class TwitterModel extends ViewableDigraph {

	public TwitterModel(){
		this("Twitter Model");
	}
	
	public TwitterModel(String name) {
		super(name);
		
		addOutport("OUT");
		
		ViewableAtomic g = new RealisticTweetG();
		ViewableAtomic tm = new TweetCreator();
		ViewableAtomic tr = new Transducer();
		
		ViewableAtomic p1 = new Processor("P1",10);
		ViewableAtomic p2 = new Processor("P2",10);
		ViewableAtomic p3 = new Processor("P3",10);
		
		add(g);
		add(tm);
		add(tr);
		
		add(p1);
		add(p2);
		add(p3);
		
		//processor coupling 
		addCoupling(tr, "send_lists_P1", p1, "lists");
		addCoupling(p1, "stat", tr, "solved");
		addCoupling(tr, "send_lists_P2", p2, "lists");
		addCoupling(p2, "stat", tr, "solved");
		addCoupling(tr, "send_lists_P3", p3, "lists");
		addCoupling(p3, "stat", tr, "solved");
		
    //code to allow the user to FORCE returning the stats.
		addInport("putStatsNow");
    addTestInput("putStatsNow", new entity("Getstats"));
    addCoupling(this, "putStatsNow", tm, TweetCreator.IN_RETURNSTATSNOW);

    //code to start the experiment.
    addInport("startExp");
    addTestInput("startExp", new entity("Start"));
    addCoupling(this, "startExp", g, RealisticTweetG.IN_START);
		
    //add some test extreme topics
    addInport("extremeTopic");
    addCoupling(this, "extremeTopic", tm, TweetCreator.IN_EXTREMETOPIC);
    addTestInput("extremeTopic", new ExtremeTopicCommand("1", 30.0));
		
		addCoupling(g, TweetG.OUT_SETTINGS, tm, TweetCreator.IN_CONFIG);
		addCoupling(g, TweetG.OUT_TWTCMD, tm, TweetCreator.IN_TWEETCOMMAND);
		
		addCoupling(tm, TweetCreator.OUT_TWEET, tr, "lists");
		addCoupling(tr, "stat", this, "OUT");

	}

	
    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(696, 391);
        ((ViewableComponent)withName("Tansducer")).setPreferredLocation(new Point(178, 167));
        ((ViewableComponent)withName("P1")).setPreferredLocation(new Point(34, 273));
        ((ViewableComponent)withName("TweetCreator")).setPreferredLocation(new Point(115, 89));
        ((ViewableComponent)withName("Real Tweet Gen")).setPreferredLocation(new Point(-38, 31));
        ((ViewableComponent)withName("P3")).setPreferredLocation(new Point(313, 303));
        ((ViewableComponent)withName("P2")).setPreferredLocation(new Point(170, 288));
    }
}
